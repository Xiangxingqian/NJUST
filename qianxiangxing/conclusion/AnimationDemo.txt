Masterial-Animations App主要功能

1. Activity transition animations，including enter, exit, reenter and return animations.
2. ShareElements transitions, including single element, multiple elements, 
3. Activity的入出场动画作用于window，Fragment的动画作用于Fragment。
4. 入出场动画分为slide(侧滑)，explode(爆炸)和fade(渐变)。
5. 动画使用 
in Java: 
	Slide slide = new Slide(); 
in XML:
	<explode
		android:duration="@integer/anim_duration_long"
		android:interpolator="@android:interpolator/bounce" />
		
6. 共享元素的跳转--startActivity(intent, bundle) bundle携带共享元素的信息, 如共享元素的View和共享元素的transitionName。
两个界面共享的元素只要满足共享元素对中的String元素与共享元素的transitionName匹配。
7. 可以指定多个共享元素
8. 改变View的大小，位置. 通过layout的LayoutParams来设置View的放大和缩小；通过layoutParams设置view的左对齐or居中or右对齐
9. View每隔100ms展示，child.animate().setStartDealy(100).setScaleX(1).setScaleY(1)
10. 设置波纹效果
--button自带波纹效果
--使用主题让所有view带有波纹效果 
--设置布局background使view带有波纹效果 android:background="?android:attr/selectableItemBackground"  
--设置view的background使view带有波纹效果 android:background="?android:attr/selectableItemBackgroundBorderless" 

android:colorControlHighlight：设置波纹颜色
android:colorAccent：设置checkbox等控件的选中颜色

11. 四色球变换位置
12. 动画颜色 小球爆炸充满全屏

13.	属性动画(ObjectAniamator)和一般动画的不同：属性动画是view的属性随着时间的改变而改变,而一般动画则是View的图片不是View随着时间的改变而改变，View的属性不改变，因此在动画结束时，View会回到初始状态。
14. 属性动画包括透明度，位移等。
其中值得一提的是位移，如public TranslateAnimation(float fromXDelta, float toXDelta, float fromYDelta, float toYDelta) 其中的参数都是相对于View的，而不是相对于窗体的。
translationX(400) 表示移动到点(0,400)
translationXBy(400) 增量，表示(0, currentPosition+400)
15. RotateAnimation的旋转轴默认是(0,0)点，但这个点不是相对于屏幕的(0,0)点，而是相对于View的(0,0)点
16. 因此统一来看，动画涉及到坐标位置都是相对于View的。(其实也好，相对于屏幕挺坑的。比如旋转时要计算屏幕的绝对坐标)
17. res/anim 放一般动画，只能一起执行  res/animator放属性动画，属性动画可以顺序执行，也可以一起执行

